function iniciarApp(){navegacionFija(),crearGaleria(),scrollNav()}function navegacionFija(){const e=document.querySelector(".header"),t=document.querySelector(".sobre-festival"),n=document.querySelector("body");window.addEventListener("scroll",(function(){t.getBoundingClientRect().bottom<0?(n.classList.add("body-scroll"),e.classList.add("fijo")):(n.classList.remove("body-scroll"),e.classList.remove("fijo"))}))}function scrollNav(){document.querySelectorAll(".navegacion-principal a").forEach(e=>{e.addEventListener("click",e=>{e.preventDefault();const t=e.target.attributes.href.value;document.querySelector(t).scrollIntoView({behavior:"smooth"})})})}function crearGaleria(){const e=document.querySelector(".galeria-imagenes");for(let t=1;t<=12;t++){const n=document.createElement("picture");n.innerHTML=`\n                <source srcset="build/img/thumb/${t}.avif" type="image/avif">\n                <source srcset="build/img/thumb/${t}.webp" type="image/webp">\n                <img loading ="lazy" width="300" height="300" src="build/img/thumb/${t}.jpg" alt="">\n           `,n.onclick=function(){mostrarImagen(t)},e.appendChild(n)}}function mostrarImagen(e){const t=document.createElement("picture");t.innerHTML=`\n         <source srcset="build/img/grande/${e}.avif" type="image/avif">\n         <source srcset="build/img/grande/${e}.webp" type="image/webp">\n         <img loading ="lazy" width="300" height="300" src="build/img/grande/${e}.jpg" alt="">\n    `;const n=document.createElement("DIV");n.appendChild(t),n.classList.add("overlay"),n.onclick=function(){document.querySelector("body").classList.remove("fijar-body"),n.remove()};const o=document.createElement("P");o.textContent="X",o.classList.add("btn-cerrar"),o.onclick=function(){document.querySelector("body").classList.remove("fijar-body"),n.remove()},n.appendChild(o);const c=document.querySelector("body");c.appendChild(n),c.classList.add("fijar-body")}document.addEventListener("DOMContentLoaded",(function(){iniciarApp()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJpbmljaWFyQXBwIiwibmF2ZWdhY2lvbkZpamEiLCJjcmVhckdhbGVyaWEiLCJzY3JvbGxOYXYiLCJiYXJyYSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNvYnJlRmVzdGl2YWwiLCJib2R5Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImJvdHRvbSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZW5sYWNlIiwiZSIsInByZXZlbnREZWZhdWx0Iiwic2VjY2lvblNjcm9sbCIsInRhcmdldCIsImF0dHJpYnV0ZXMiLCJocmVmIiwidmFsdWUiLCJzY3JvbGxJbnRvVmlldyIsImJlaGF2aW9yIiwiZ2FsZXJpYSIsImkiLCJpbWFnZW4iLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwib25jbGljayIsIm1vc3RyYXJJbWFnZW4iLCJhcHBlbmRDaGlsZCIsImlkIiwib3ZlcmxheSIsImNlcnJhck1vZGFsIiwidGV4dENvbnRlbnQiXSwibWFwcGluZ3MiOiJBQUlBLFNBQVNBLGFBQ0RDLGlCQUNEQyxlQUNBQyxZQUdQLFNBQVNGLGlCQUNMLE1BQU1HLEVBQVFDLFNBQVNDLGNBQWMsV0FDL0JDLEVBQWdCRixTQUFTQyxjQUFjLG1CQUN2Q0UsRUFBT0gsU0FBU0MsY0FBYyxRQUNwQ0csT0FBT0MsaUJBQWlCLFVBQVMsV0FFMUJILEVBQWNJLHdCQUF3QkMsT0FBUSxHQUM3Q0osRUFBS0ssVUFBVUMsSUFBSSxlQUNuQlYsRUFBTVMsVUFBVUMsSUFBSSxVQUVwQk4sRUFBS0ssVUFBVUUsT0FBTyxlQUN0QlgsRUFBTVMsVUFBVUUsT0FBTyxZQU1uQyxTQUFTWixZQUNjRSxTQUFTVyxpQkFBaUIsMkJBQ2xDQyxRQUFRQyxJQUNYQSxFQUFPUixpQkFBaUIsUUFBU1MsSUFDN0JBLEVBQUVDLGlCQUNGLE1BQU1DLEVBQWdCRixFQUFFRyxPQUFPQyxXQUFXQyxLQUFLQyxNQUMvQnBCLFNBQVNDLGNBQWNlLEdBQy9CSyxlQUFlLENBQUNDLFNBQVMsZUFNakQsU0FBU3pCLGVBQ0YsTUFBTTBCLEVBQVV2QixTQUFTQyxjQUFjLHFCQUV2QyxJQUFJLElBQUl1QixFQUFJLEVBQUdBLEdBQUcsR0FBR0EsSUFBSSxDQUNyQixNQUFNQyxFQUFTekIsU0FBUzBCLGNBQWMsV0FDdENELEVBQU9FLFVBQVkscURBQ29CSCwrRUFDQUEsa0hBQ21DQSw4QkFFMUVDLEVBQU9HLFFBQVUsV0FDVkMsY0FBY0wsSUFHckJELEVBQVFPLFlBQVlMLElBSS9CLFNBQVNJLGNBQWNFLEdBQ25CLE1BQU1OLEVBQVN6QixTQUFTMEIsY0FBYyxXQUN0Q0QsRUFBT0UsVUFBWSwrQ0FDcUJJLHlFQUNBQSw0R0FDbUNBLHVCQUczRSxNQUFNQyxFQUFVaEMsU0FBUzBCLGNBQWMsT0FDdkNNLEVBQVFGLFlBQVlMLEdBQ3BCTyxFQUFReEIsVUFBVUMsSUFBSSxXQUN0QnVCLEVBQVFKLFFBQVUsV0FDRDVCLFNBQVNDLGNBQWMsUUFDL0JPLFVBQVVFLE9BQU8sY0FDdEJzQixFQUFRdEIsVUFJWixNQUFNdUIsRUFBY2pDLFNBQVMwQixjQUFjLEtBQzNDTyxFQUFZQyxZQUFjLElBQzFCRCxFQUFZekIsVUFBVUMsSUFBSSxjQUMxQndCLEVBQVlMLFFBQVUsV0FDTDVCLFNBQVNDLGNBQWMsUUFDL0JPLFVBQVVFLE9BQU8sY0FDdEJzQixFQUFRdEIsVUFHWnNCLEVBQVFGLFlBQVlHLEdBR3BCLE1BQU05QixFQUFPSCxTQUFTQyxjQUFjLFFBQ3BDRSxFQUFLMkIsWUFBWUUsR0FDakI3QixFQUFLSyxVQUFVQyxJQUFJLGNBMUZ2QlQsU0FBU0ssaUJBQWlCLG9CQUFvQixXQUMxQ1YiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCl7XHJcbiAgICBpbmljaWFyQXBwKCk7XHJcbn0pXHJcblxyXG5mdW5jdGlvbiBpbmljaWFyQXBwKCl7XHJcbiAgICAgICAgbmF2ZWdhY2lvbkZpamEoKTtcclxuICAgICAgIGNyZWFyR2FsZXJpYSgpO1xyXG4gICAgICAgc2Nyb2xsTmF2KCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG5hdmVnYWNpb25GaWphKCl7ICBcclxuICAgIGNvbnN0IGJhcnJhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlcicpO1xyXG4gICAgY29uc3Qgc29icmVGZXN0aXZhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zb2JyZS1mZXN0aXZhbCcpO1xyXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLGZ1bmN0aW9uICgpe1xyXG5cclxuICAgICAgICBpZihzb2JyZUZlc3RpdmFsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmJvdHRvbSA8MCl7XHJcbiAgICAgICAgICAgIGJvZHkuY2xhc3NMaXN0LmFkZCgnYm9keS1zY3JvbGwnKTtcclxuICAgICAgICAgICAgYmFycmEuY2xhc3NMaXN0LmFkZCgnZmlqbycpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2JvZHktc2Nyb2xsJyk7XHJcbiAgICAgICAgICAgIGJhcnJhLmNsYXNzTGlzdC5yZW1vdmUoJ2Zpam8nKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgfSlcclxuICAgICAgIFxyXG59XHJcbmZ1bmN0aW9uIHNjcm9sbE5hdigpe1xyXG4gICAgICAgY29uc3QgZW5sYWNlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5uYXZlZ2FjaW9uLXByaW5jaXBhbCBhJyk7XHJcbiAgICAgICBlbmxhY2VzLmZvckVhY2goZW5sYWNlID0+e1xyXG4gICAgICAgICAgICBlbmxhY2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBlID0+IHtcclxuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHNlY2Npb25TY3JvbGwgPSBlLnRhcmdldC5hdHRyaWJ1dGVzLmhyZWYudmFsdWU7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBzZWNjaW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWNjaW9uU2Nyb2xsKTtcclxuICAgICAgICAgICAgICAgIHNlY2Npb24uc2Nyb2xsSW50b1ZpZXcoe2JlaGF2aW9yOlwic21vb3RoXCJ9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICB9KTtcclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWFyR2FsZXJpYSgpe1xyXG4gICAgICAgY29uc3QgZ2FsZXJpYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYWxlcmlhLWltYWdlbmVzJyk7XHJcbiAgICAgICBcclxuICAgICAgIGZvcihsZXQgaSA9IDE7IGk8PTEyO2krKyl7XHJcbiAgICAgICAgICAgY29uc3QgaW1hZ2VuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGljdHVyZScpO1xyXG4gICAgICAgICAgIGltYWdlbi5pbm5lckhUTUwgPSBgXHJcbiAgICAgICAgICAgICAgICA8c291cmNlIHNyY3NldD1cImJ1aWxkL2ltZy90aHVtYi8ke2l9LmF2aWZcIiB0eXBlPVwiaW1hZ2UvYXZpZlwiPlxyXG4gICAgICAgICAgICAgICAgPHNvdXJjZSBzcmNzZXQ9XCJidWlsZC9pbWcvdGh1bWIvJHtpfS53ZWJwXCIgdHlwZT1cImltYWdlL3dlYnBcIj5cclxuICAgICAgICAgICAgICAgIDxpbWcgbG9hZGluZyA9XCJsYXp5XCIgd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIiBzcmM9XCJidWlsZC9pbWcvdGh1bWIvJHtpfS5qcGdcIiBhbHQ9XCJcIj5cclxuICAgICAgICAgICBgO1xyXG4gICAgICAgICAgIGltYWdlbi5vbmNsaWNrID0gZnVuY3Rpb24gKCl7XHJcbiAgICAgICAgICAgICAgICAgIG1vc3RyYXJJbWFnZW4oaSk7XHJcbiAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICBnYWxlcmlhLmFwcGVuZENoaWxkKGltYWdlbik7XHJcbiAgICAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1vc3RyYXJJbWFnZW4oaWQpe1xyXG4gICAgY29uc3QgaW1hZ2VuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGljdHVyZScpO1xyXG4gICAgaW1hZ2VuLmlubmVySFRNTCA9IGBcclxuICAgICAgICAgPHNvdXJjZSBzcmNzZXQ9XCJidWlsZC9pbWcvZ3JhbmRlLyR7aWR9LmF2aWZcIiB0eXBlPVwiaW1hZ2UvYXZpZlwiPlxyXG4gICAgICAgICA8c291cmNlIHNyY3NldD1cImJ1aWxkL2ltZy9ncmFuZGUvJHtpZH0ud2VicFwiIHR5cGU9XCJpbWFnZS93ZWJwXCI+XHJcbiAgICAgICAgIDxpbWcgbG9hZGluZyA9XCJsYXp5XCIgd2lkdGg9XCIzMDBcIiBoZWlnaHQ9XCIzMDBcIiBzcmM9XCJidWlsZC9pbWcvZ3JhbmRlLyR7aWR9LmpwZ1wiIGFsdD1cIlwiPlxyXG4gICAgYDtcclxuICAgIC8vY3JlYSBlbCBvdmVybGF5IGNvbiBsYSBpbWFnZW5cclxuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdESVYnKTtcclxuICAgIG92ZXJsYXkuYXBwZW5kQ2hpbGQoaW1hZ2VuKTtcclxuICAgIG92ZXJsYXkuY2xhc3NMaXN0LmFkZCgnb3ZlcmxheScpO1xyXG4gICAgb3ZlcmxheS5vbmNsaWNrID0gZnVuY3Rpb24gKCl7XHJcbiAgICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2ZpamFyLWJvZHknKTtcclxuICAgICAgICBvdmVybGF5LnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vYm90b24gcGFyYSBjZXJyYXJcclxuICAgIGNvbnN0IGNlcnJhck1vZGFsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnUCcpO1xyXG4gICAgY2VycmFyTW9kYWwudGV4dENvbnRlbnQgPSAnWCc7XHJcbiAgICBjZXJyYXJNb2RhbC5jbGFzc0xpc3QuYWRkKCdidG4tY2VycmFyJyk7XHJcbiAgICBjZXJyYXJNb2RhbC5vbmNsaWNrID0gZnVuY3Rpb24gKCl7XHJcbiAgICAgICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgICAgICBib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2ZpamFyLWJvZHknKTtcclxuICAgICAgICBvdmVybGF5LnJlbW92ZSgpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgb3ZlcmxheS5hcHBlbmRDaGlsZChjZXJyYXJNb2RhbCk7XHJcblxyXG4gICAgLy9hbmFkaXIgYWwgaHRtbFxyXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcclxuICAgIGJvZHkuYXBwZW5kQ2hpbGQob3ZlcmxheSk7XHJcbiAgICBib2R5LmNsYXNzTGlzdC5hZGQoJ2ZpamFyLWJvZHknKTtcclxufVxyXG5cclxuXHJcbiJdfQ==
